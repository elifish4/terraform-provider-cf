version: '1.0'
stages:
  - clone
  - test
  - pakcages
  - release
steps:
  main_clone:
    title: 'Cloning main repository...'
    stage: clone
    type: git-clone
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_REVISION}}"
    git: github

  go_fmt:
    title: 'Formatting'
    stage: test
    image:  goreleaser/goreleaser:v0.133
    commands:
      - go fmt

  prepare_env_vars:
    title: 'Preparing environment variables...'
    stage: release
    image: codefreshio/ci-helpers
    environment:
      - GPG_FINGERPRINT=${{GPG_FINGERPRINT}}
      - GPG_PRIVATE_KEY=${{GPG_PRIVATE_KEY}}
      - GPG_PUBLICKEY=${{GPG_PUBLICKEY}}
      - SIGNINGKEY=${{SIGNINGKEY}}
    commands:
      - source /get-token/get-gh-token.sh
      - cf_export GITHUB_TOKEN
      - cf_export GPG_PRIVATE_KEY
      - cf_export GPG_PUBLIC_KEY
      - cf_export GPG_FINGERPRINT
      - cf_export SIGNINGKEY
      - apk update
      - apk fetch gnupg
      - apk add gnupg
      - git config user.signingkey ${SIGNINGKEY}
      - echo ${GPG_PUBLICKEY} > private.key
      - gpg --import private.key
      - gpg --list-secret-keys --keyid-format LONG
    when:
      condition:
        all:
          release: "'${{RELEASE}}' == 'true'"

  release_binaries:
    title: Create release in Github
    image:  goreleaser/goreleaser:v0.133
    stage: release
    environment:
      - GPG_FINGERPRINT=${{GPG_FINGERPRINT}}
      - GPG_PRIVATE_KEY=${{GPG_PRIVATE_KEY}}
      - GPG_PUBLICKEY=${{GPG_PUBLICKEY}}
      - SIGNINGKEY=${{SIGNINGKEY}}
    commands:
      - goreleaser release --rm-dist
    when:
      condition:
        all:
          release: "'${{RELEASE}}' == 'true'"
